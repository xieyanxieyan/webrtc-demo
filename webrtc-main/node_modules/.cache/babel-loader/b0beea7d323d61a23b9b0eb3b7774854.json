{"remainingRequest":"/Users/koolearn/Downloads/webrtc-demo/webrtc-main/node_modules/babel-loader/lib/index.js!/Users/koolearn/Downloads/webrtc-demo/webrtc-main/node_modules/eslint-loader/index.js??ref--13-0!/Users/koolearn/Downloads/webrtc-demo/webrtc-main/src/utils/palette.js","dependencies":[{"path":"/Users/koolearn/Downloads/webrtc-demo/webrtc-main/src/utils/palette.js","mtime":1623727827757},{"path":"/Users/koolearn/Downloads/webrtc-demo/webrtc-main/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/koolearn/Downloads/webrtc-demo/webrtc-main/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/koolearn/Downloads/webrtc-demo/webrtc-main/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["/*\n * @Version: 2.0\n * @Autor: xieyan\n * @Date: 2021-06-14 16:53:31\n * @LastEditors: xieyan\n * @LastEditTime: 2021-06-15 11:18:51\n */\nclass Palette {\n  constructor(canvas, {\n    drawType = 'line',\n    drawColor = \"rgba(19, 206, 102,c1)\",\n    lineWidth = 5,\n    sides = 3,\n    allowCallback,\n    moveCallback\n  }) {\n    this.canvas = canvas;\n    this.width = canvas.width;\n    this.height = canvas.height;\n    this.paint = canvas.getContext('2d');\n    this.isClickCanvas = false; // 是否点击canvas\n\n    this.imgData = []; // 存储上一次的图像，用于撤回\n\n    this.isMoveCanvas = false; // 鼠标树否有移动\n\n    this.index = 0; // 记录当前显示的是第几帧\n\n    this.x = 0; // 鼠标按下是的x坐标\n\n    this.y = 0; // 鼠标按下是的y坐标\n\n    this.last = [this.x, this.y]; // 鼠标按下及每次移动后的坐标\n\n    this.drawType = drawType;\n    this.drawColor = drawColor;\n    this.lineWidth = lineWidth;\n    this.sides = sides; // 多边形边数\n\n    this.allowCallback = allowCallback || function () {}; // 允许操作的回调\n\n\n    this.moveCallback = moveCallback || function () {}; // 鼠标移动的回调\n\n\n    this.bindMousemove = function () {}; // \n\n\n    this.bindMousedown = function () {}; // 解决 eventlistener 不能bind\n\n\n    this.bindMouseup = function () {}; // 解决 eventlistener 不能bind\n\n\n    this.init();\n  }\n\n  init() {\n    this.paint.fillStyle = '#fff';\n    this.paint.fillRect(0, 0, this.width, this.height);\n    this.gatherImage();\n    this.bindMousemove = this.onmousemove.bind(this); // 解决 eventlistener 不能bind\n\n    this.bindMousedown = this.onmousedown.bind(this);\n    this.bindMouseup = this.onmouseup.bind(this);\n    this.canvas.addEventListener('mousedown', this.bindMousedown);\n    document.addEventListener('mouseup', this.bindMouseup);\n  }\n\n  onmouseup() {\n    if (this.isClickCanvas) {\n      this.isClickCanvas = false;\n      this.canvas.removeEventListener('mousemove', this.bindMousemove);\n\n      if (this.isMoveCanvas) {\n        this.isMoveCanvas = false;\n        this.moveCallback('gatherImage');\n        this.gatherImage();\n      }\n    }\n  }\n\n  onmousedown(e) {\n    this.isClickCanvas = true;\n    this.x = e.offsetX;\n    this.y = e.offsetY;\n    this.last = [this.x, this.y];\n    this.canvas.addEventListener('mousemove', this.bindMousemove);\n  }\n\n  onmousemove(e) {\n    this.isMoveCanvas = true;\n    this.endx = e.offsetX;\n    this.endy = e.offsetY;\n    let width = this.endx - this.x;\n    let height = this.endy - this.y;\n    let now = [this.endx, this.endy];\n\n    switch (this.drawType) {\n      case 'line':\n        {\n          let params = [this.last, now, this.lineWidth, this.drawColor];\n          this.moveCallback('line', ...params);\n          this.line(...params);\n        }\n        break;\n\n      case 'rect':\n        {\n          let params = [this.x, this.y, width, height, this.lineWidth, this.drawColor];\n          this.moveCallback('rect', params);\n          this.rect(...params);\n        }\n        break;\n\n      case 'polygon':\n        {\n          let params = [this.x, this.y, this.sides, width, height, this.lineWidth, this.drawColor];\n          this.moveCallback('polygon', ...params);\n          this.polygon(...params);\n        }\n        break;\n\n      case 'arc':\n        {\n          let params = [this.x, this.y, width, height, this.lineWidth, this.drawColor];\n          this.moveCallback('arc', ...params);\n          this.arc(...params);\n        }\n        break;\n\n      case 'eraser':\n        {\n          let params = [this.endx, this.endy, this.width, this.height, this.lineWidth];\n          this.moveCallback('eraser', ...params);\n          this.eraser(...params);\n        }\n        break;\n    }\n  }\n\n  gatherImage() {\n    this.imgData = this.imgData.slice(0, this.index + 1); // 每次鼠标抬起时，将储存的imgData截取至index处\n\n    let imgData = this.paint.getImageData(0, 0, this.width, this.height);\n    this.imgData.push(imgData);\n    this.index = this.imgData.length - 1; // 存储完后将index重置为imgData的最后一位\n\n    this.allowCallback(this.index > 0, this.index < this.imgData - 1);\n  }\n\n  line(last, now, lineWidth, drawColor) {\n    this.paint.beginPath();\n    this.paint.linCap = 'round'; // 设定线条与线条间接合处的样式\n\n    this.paint.lineJoin = 'round';\n    this.paint.lineWidth = lineWidth;\n    this.paint.strokeStyle = drawColor;\n    this.paint.moveTo(last[0], last[1]);\n    this.paint.lineTo(now[0], now[1]);\n    this.paint.closePath();\n    this.paint.stroke();\n    this.last = now;\n  }\n\n  rect(x, y, width, height, lineWidth, drawColor) {\n    this.reSetImage();\n    this.paint.lineWidth = lineWidth;\n    this.paint.stokeStyle = drawColor;\n    this.paint.strokeRect(x, y, width, height);\n  }\n\n  reSetImage() {\n    this.paint.clearRect(0, 0, this.width, this.height);\n\n    if (this.imgData.length >= 1) {\n      this.paint.putImageData(this.imgData[this.index], 0, 0);\n    }\n  }\n\n  polygon(x, y, sides, width, height, lineWidth, drawColor) {\n    this.reSetImage();\n    let n = sides;\n    let ran = 360 / n;\n    let rn = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\n    this.paint.beginPath();\n    this.paint.strokeStyle = drawColor;\n    this.paint.lineWidth = lineWidth;\n\n    for (let i = 0; i < n; i++) {\n      this.paint.lineTo(x + Math.sin((i * ran + 45) * Math.PI / 180) * rn, y + Math.cos((i * ran + 45) * Math.PI / 180) * rn);\n    }\n\n    this.paint.closePath();\n    this.paint.stroke();\n  }\n\n  arc(x, y, width, height, lineWidth, drawColor) {\n    // 绘制圆形\n    this.reSetImage();\n    this.paint.beginPath();\n    this.paint.lineWidth = lineWidth;\n    let r = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\n    this.paint.arc(x, y, r, 0, Math.PI * 2, false);\n    this.paint.strokeStyle = drawColor;\n    this.paint.closePath();\n    this.paint.stroke();\n  }\n\n  eraser(endx, endy, width, height, lineWidth) {\n    // 橡皮擦\n    this.paint.save();\n    this.paint.beginPath();\n    this.paint.arc(endx, endy, lineWidth / 2, 0, 2 * Math.PI);\n    this.paint.closePath();\n    this.paint.clip();\n    this.paint.clearRect(0, 0, width, height);\n    this.paint.fillStyle = '#fff';\n    this.paint.fillRect(0, 0, width, height);\n    this.paint.restore();\n  }\n\n  cancel() {\n    if (--this.index < 0) {\n      this.index = 0;\n      return;\n    }\n\n    this.allowCallback(this.index > 0, this.index < this.imgData.length - 1);\n    this.paint.putImageData(this.imgData[this.index], 0, 0);\n  }\n\n  go() {\n    // 前进\n    if (++this.index > this.imgData.length - 1) {\n      this.index = this.imgData.length - 1;\n      return;\n    }\n\n    this.allowCallback(this.index > 0, this.index < this.imgData.length - 1);\n    this.paint.putImageData(this.imgData[this.index], 0, 0);\n  }\n\n  clear() {\n    // 清屏\n    this.imgData = [];\n    this.paint.clearRect(0, 0, this.width, this.height);\n    this.paint.fillStyle = '#fff';\n    this.paint.fillRect(0, 0, this.width, this.height);\n    this.gatherImage();\n  }\n\n  changeWay({\n    type,\n    color,\n    lineWidth,\n    sides\n  }) {\n    // 绘制条件\n    this.drawType = type !== 'color' && type || this.drawType; // 绘制形状\n\n    this.drawColor = color || this.drawColor; // 绘制颜色\n\n    this.lineWidth = lineWidth || this.lineWidth; // 线宽\n\n    this.sides = sides || this.sides; // 边数\n  }\n\n  destroy() {\n    this.clear();\n    this.canvas.removeEventListener('mousedown', this.bindMousedown);\n    document.removeEventListener('mouseup', this.bindMouseup);\n    this.canvas = null;\n    this.paint = null;\n  }\n\n}\n\nexport { Palette };",{"version":3,"sources":["/Users/koolearn/Downloads/webrtc-demo/webrtc-main/src/utils/palette.js"],"names":["Palette","constructor","canvas","drawType","drawColor","lineWidth","sides","allowCallback","moveCallback","width","height","paint","getContext","isClickCanvas","imgData","isMoveCanvas","index","x","y","last","bindMousemove","bindMousedown","bindMouseup","init","fillStyle","fillRect","gatherImage","onmousemove","bind","onmousedown","onmouseup","addEventListener","document","removeEventListener","e","offsetX","offsetY","endx","endy","now","params","line","rect","polygon","arc","eraser","slice","getImageData","push","length","beginPath","linCap","lineJoin","strokeStyle","moveTo","lineTo","closePath","stroke","reSetImage","stokeStyle","strokeRect","clearRect","putImageData","n","ran","rn","Math","sqrt","pow","i","sin","PI","cos","r","save","clip","restore","cancel","go","clear","changeWay","type","color","destroy"],"mappings":"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","sourcesContent":["/*\n * @Version: 2.0\n * @Autor: xieyan\n * @Date: 2021-06-14 16:53:31\n * @LastEditors: xieyan\n * @LastEditTime: 2021-06-15 11:18:51\n */\nclass Palette {\n    constructor(canvas, {drawType='line', drawColor=\"rgba(19, 206, 102,c1)\", lineWidth = 5, sides = 3, allowCallback, moveCallback}) {\n        this.canvas = canvas;\n        this.width = canvas.width;\n        this.height = canvas.height;\n        this.paint = canvas.getContext('2d');\n        this.isClickCanvas = false; // 是否点击canvas\n        this.imgData = []; // 存储上一次的图像，用于撤回\n        this.isMoveCanvas = false; // 鼠标树否有移动\n        this.index = 0; // 记录当前显示的是第几帧\n        this.x = 0; // 鼠标按下是的x坐标\n        this.y = 0; // 鼠标按下是的y坐标\n        this.last = [this.x, this.y]; // 鼠标按下及每次移动后的坐标\n        this.drawType = drawType;\n        this.drawColor = drawColor;\n        this.lineWidth = lineWidth;\n        this.sides = sides; // 多边形边数\n        this.allowCallback = allowCallback || function () {}; // 允许操作的回调\n        this.moveCallback = moveCallback || function(){}; // 鼠标移动的回调\n        this.bindMousemove = function() {}; // \n        this.bindMousedown = function () {}; // 解决 eventlistener 不能bind\n        this.bindMouseup = function () {}; // 解决 eventlistener 不能bind\n        this.init();\n    }\n    init() {\n        this.paint.fillStyle = '#fff';\n        this.paint.fillRect(0, 0, this.width, this.height);\n        this.gatherImage();\n        this.bindMousemove = this.onmousemove.bind(this); // 解决 eventlistener 不能bind\n        this.bindMousedown = this.onmousedown.bind(this);\n        this.bindMouseup = this.onmouseup.bind(this);\n        this.canvas.addEventListener('mousedown', this.bindMousedown);\n        document.addEventListener('mouseup', this.bindMouseup);\n    }\n    onmouseup() {\n        if(this.isClickCanvas){\n            this.isClickCanvas = false;\n            this.canvas.removeEventListener('mousemove', this.bindMousemove);\n            if(this.isMoveCanvas){\n                this.isMoveCanvas = false;\n                this.moveCallback('gatherImage');\n                this.gatherImage();\n            }\n        }\n    }\n    onmousedown(e) {\n        this.isClickCanvas = true;\n        this.x = e.offsetX;\n        this.y = e.offsetY;\n        this.last = [this.x, this.y];\n        this.canvas.addEventListener('mousemove', this.bindMousemove);\n    }\n    onmousemove(e) {\n        this.isMoveCanvas = true;\n        this.endx = e.offsetX;\n        this.endy = e.offsetY;\n        let width = this.endx - this.x;\n        let height = this.endy - this.y;\n        let now = [this.endx, this.endy];\n        switch(this.drawType){\n            case 'line': {\n                let params = [this.last, now, this.lineWidth, this.drawColor];\n                this.moveCallback('line', ...params);\n                this.line(...params)\n            }\n            break;\n            case 'rect': {\n                let params = [this.x, this.y, width, height, this.lineWidth, this.drawColor];\n                this.moveCallback('rect', params);\n                this.rect(...params);\n            }\n            break;\n            case 'polygon': {\n                let params = [this.x, this.y, this.sides, width, height, this.lineWidth, this.drawColor];\n                this.moveCallback('polygon', ...params);\n                this.polygon(...params);\n            }\n            break;\n            case 'arc': {\n                let params = [this.x, this.y, width, height, this.lineWidth, this.drawColor];\n                this.moveCallback('arc', ...params);\n                this.arc(...params);\n            }\n            break;\n            case 'eraser' : {\n                let params = [this.endx, this.endy, this.width, this.height, this.lineWidth];\n                this.moveCallback('eraser', ...params);\n                this.eraser(...params);\n            }\n            break;\n        }\n    }\n    gatherImage() {\n        this.imgData = this.imgData.slice(0, this.index + 1) // 每次鼠标抬起时，将储存的imgData截取至index处\n        let imgData = this.paint.getImageData(0, 0, this.width, this.height);\n        this.imgData.push(imgData);\n        this.index = this.imgData.length - 1; // 存储完后将index重置为imgData的最后一位\n        this.allowCallback(this.index > 0, this.index < this.imgData - 1);\n    }\n    line(last, now, lineWidth, drawColor) {\n        this.paint.beginPath();\n        this.paint.linCap = 'round'; // 设定线条与线条间接合处的样式\n        this.paint.lineJoin = 'round';\n        this.paint.lineWidth = lineWidth;\n        this.paint.strokeStyle = drawColor;\n        this.paint.moveTo(last[0], last[1]);\n        this.paint.lineTo(now[0], now[1]);\n        this.paint.closePath();\n        this.paint.stroke();\n        this.last = now;\n    }\n    rect(x, y, width, height, lineWidth, drawColor) {\n        this.reSetImage();\n        this.paint.lineWidth = lineWidth;\n        this.paint.stokeStyle = drawColor;\n        this.paint.strokeRect(x, y, width, height);\n    }\n    reSetImage() {\n        this.paint.clearRect(0, 0, this.width, this.height);\n        if(this.imgData.length >= 1){\n            this.paint.putImageData(this.imgData[this.index], 0, 0)\n        }\n    }\n    polygon(x, y, sides, width, height, lineWidth, drawColor) {\n        this.reSetImage();\n        let n = sides;\n        let ran = 360 / n;\n        let rn = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\n        this.paint.beginPath();\n        this.paint.strokeStyle = drawColor;\n        this.paint.lineWidth = lineWidth;\n        for(let i = 0; i < n; i ++){\n            this.paint.lineTo(x + Math.sin((i * ran + 45) * Math.PI / 180) * rn,  y + Math.cos((i * ran + 45) * Math.PI / 180) * rn);\n        }\n        this.paint.closePath();\n        this.paint.stroke();\n    }\n    arc(x, y, width, height, lineWidth, drawColor) { // 绘制圆形\n        this.reSetImage();\n        this.paint.beginPath();\n        this.paint.lineWidth = lineWidth;\n        let r = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\n        this.paint.arc(x, y, r, 0, Math.PI*2, false);\n        this.paint.strokeStyle = drawColor;\n        this.paint.closePath();\n        this.paint.stroke();\n    }\n    eraser(endx, endy, width, height, lineWidth) { // 橡皮擦\n        this.paint.save();\n        this.paint.beginPath();\n        this.paint.arc(endx, endy, lineWidth / 2, 0, 2 * Math.PI);\n        this.paint.closePath();\n        this.paint.clip();\n        this.paint.clearRect(0, 0, width, height);\n        this.paint.fillStyle = '#fff';\n        this.paint.fillRect(0, 0, width, height);\n        this.paint.restore();\n    }\n    cancel() {\n        if (--this.index <0) {\n            this.index = 0;\n            return;\n        }\n        this.allowCallback(this.index > 0, this.index < this.imgData.length - 1);\n        this.paint.putImageData(this.imgData[this.index], 0, 0);\n    }\n    go () { // 前进\n        if (++this.index > this.imgData.length -1) {\n            this.index = this.imgData.length -1;\n            return;\n        }\n        this.allowCallback(this.index > 0, this.index < this.imgData.length - 1);\n        this.paint.putImageData(this.imgData[this.index], 0, 0);\n    }\n    clear() { // 清屏\n        this.imgData = [];\n        this.paint.clearRect(0, 0, this.width, this.height);\n        this.paint.fillStyle = '#fff';\n        this.paint.fillRect(0, 0, this.width, this.height);\n        this.gatherImage();\n    }\n    changeWay({type, color, lineWidth, sides}) { // 绘制条件\n        this.drawType = type !== 'color' && type || this.drawType; // 绘制形状\n        this.drawColor = color || this.drawColor; // 绘制颜色\n        this.lineWidth = lineWidth || this.lineWidth; // 线宽\n        this.sides = sides || this.sides; // 边数\n    }\n    destroy() {\n        this.clear();\n        this.canvas.removeEventListener('mousedown', this.bindMousedown);\n        document.removeEventListener('mouseup', this.bindMouseup);\n        this.canvas = null;\n        this.paint = null;\n    }\n}\nexport {\n    Palette\n}"]}]}