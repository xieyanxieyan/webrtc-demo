{"remainingRequest":"/Users/koolearn/Downloads/webrtc-demo/webrtc-main/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/koolearn/Downloads/webrtc-demo/webrtc-main/src/views/Room.vue?vue&type=template&id=1561bec6&scoped=true&","dependencies":[{"path":"/Users/koolearn/Downloads/webrtc-demo/webrtc-main/src/views/Room.vue","mtime":1624021504005},{"path":"/Users/koolearn/Downloads/webrtc-demo/webrtc-main/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/koolearn/Downloads/webrtc-demo/webrtc-main/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/koolearn/Downloads/webrtc-demo/webrtc-main/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/koolearn/Downloads/webrtc-demo/webrtc-main/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n<div class=\"remote1\"\n  v-loading=\"loading\"\n  :element-loading-text=\"loadingText\"\n  element-loading-spinner=\"el-icon-loading\"\n  element-loading-background=\"rgba(0, 0, 0 , 0.7)\"\n>\n  <div class=\"shade\" v-if=\"!isJoin\">\n      <div class=\"input-container\">\n          <el-input class=\"input-account\" type=\"text\" size=\"middle\" v-model=\"account\" placeholder=\"请输入昵称\" keyup.enter=\"join\"></el-input>\n          <el-button size=\"middle\"  @click=\"join\">确定</el-button>\n      </div>\n  </div>\n  <div class=\"userList\">\n      <h5>在线用户: {{userList.length}}</h5>\n      <p v-for=\"v in userList\" :key=\"v.count\">\n          {{v.account}}\n          <i v-if=\"v.account === account || v.account === isCall\">\n              {{v.account === account ? 'me' : ''}}\n              {{v.account === isCall ? 'calling': ''}}\n          </i>\n          <span @click=\"apply(v.account)\" v-if=\"v.account !== account && v.account !== isCall\">呼叫{{v.account}}</span>\n      </p>\n  </div>\n  <div class=\"video-container\">\n      <div>\n          <ul>\n              <li v-for=\"v in handleList\" :key=\"v.type\">\n                  <el-color-picker v-model=\"color\" show-alpha v-if=\"v.type === 'color'\" @change=\"colorChange\" :disabled=\"!isToPeer\"></el-color-picker>\n                  <button :disabled=\"v.type === 'cancel' ? !isToPeer || allowCancel:\n                      v.type === 'go' ? !isToPeer || allowGo\n                      :!isToPeer\"\n                          @click=\"handleClick(v)\"\n                          v-if=\"!['color', 'lineWidth', 'polygon'].includes(v.type)\"\n                          :class=\"{active: currHandle === v.type}\"\n                  >\n                      {{v.name}}\n              </button>\n                  <el-popover\n                          placement=\"top\"\n                          width=\"400\"\n                          trigger=\"click\"\n                          v-if=\"v.type === 'polygon'\"\n                  >\n                      <el-input-number v-model=\"sides\" controls-position=\"right\" @change=\"sidesChange\" :min=\"3\" :max=\"10\"></el-input-number>\n                      <button slot=\"reference\" :disabled=\"!isToPeer\" @click=\"handleClick(v)\" :class=\"{active: currHandle === v.type}\">{{v.name}}</button>\n                  </el-popover>\n                  <el-popover\n                          placement=\"top\"\n                          width=\"400\"\n                          trigger=\"click\"\n                          v-if=\"v.type === 'lineWidth'\"\n                  >\n                      <el-slider v-model=\"lineWidth\" :max=20 @change=\"lineWidthChange\"></el-slider>\n                      <button slot=\"reference\" :disabled=\"!isToPeer\">{{v.name}} <i>{{lineWidth + 'px'}}</i></button>\n                  </el-popover>\n              </li>\n          </ul>\n          <div>\n              <h5>画板</h5>\n              <canvas width=\"400\" height=\"500\" ref=\"canvas\"></canvas>\n          </div>\n      </div>\n      <div>\n          <h5>聊天</h5>\n          <div class=\"chat\">\n              <div class=\"message\" v-for=\"(v, i) in messageList\" :key=\"i\">\n                  <p>\n                      {{v.account}} - {{v.time}}\n                  </p>\n                  <p class=\"mes\">{{v.mes}}</p>\n              </div>\n              <textarea v-model=\"sendText\"></textarea><br>\n              <button :disabled=\"!isToPeer\" @click=\"send(['text'])\">发送</button>\n          </div>\n      </div>\n  </div>\n</div>\n",null]}